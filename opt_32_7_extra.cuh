#define DECLARE_REGISTERS  float p_0_0 = 0.f; float p_0_1 = 0.f; float p_0_2 = 0.f; float p_0_3 = 0.f; float p_0_4 = 0.f; float p_0_5 = 0.f; float p_0_6 = 0.f; float p_0_7 = 0.f; float p_0_8 = 0.f; float p_0_9 = 0.f; float p_0_10 = 0.f; float p_0_11 = 0.f; float p_0_12 = 0.f; float p_0_13 = 0.f; float p_0_14 = 0.f; float p_0_15 = 0.f; float p_0_16 = 0.f; float p_0_17 = 0.f; float p_0_18 = 0.f; float p_0_19 = 0.f; float p_0_20 = 0.f; float p_0_21 = 0.f; float p_0_22 = 0.f; float p_0_23 = 0.f; float p_0_24 = 0.f; float p_0_25 = 0.f; float p_0_26 = 0.f; float p_0_27 = 0.f; float p_0_28 = 0.f; float p_0_29 = 0.f; float p_0_30 = 0.f; float p_0_31 = 0.f; float p_1_0 = 0.f; float p_1_1 = 0.f; float p_1_2 = 0.f; float p_1_3 = 0.f; float p_1_4 = 0.f; float p_1_5 = 0.f; float p_1_6 = 0.f; float p_1_7 = 0.f; float p_1_8 = 0.f; float p_1_9 = 0.f; float p_1_10 = 0.f; float p_1_11 = 0.f; float p_1_12 = 0.f; float p_1_13 = 0.f; float p_1_14 = 0.f; float p_1_15 = 0.f; float p_1_16 = 0.f; float p_1_17 = 0.f; float p_1_18 = 0.f; float p_1_19 = 0.f; float p_1_20 = 0.f; float p_1_21 = 0.f; float p_1_22 = 0.f; float p_1_23 = 0.f; float p_1_24 = 0.f; float p_1_25 = 0.f; float p_1_26 = 0.f; float p_1_27 = 0.f; float p_1_28 = 0.f; float p_1_29 = 0.f; float p_1_30 = 0.f; float p_1_31 = 0.f; float p_2_0 = 0.f; float p_2_1 = 0.f; float p_2_2 = 0.f; float p_2_3 = 0.f; float p_2_4 = 0.f; float p_2_5 = 0.f; float p_2_6 = 0.f; float p_2_7 = 0.f; float p_2_8 = 0.f; float p_2_9 = 0.f; float p_2_10 = 0.f; float p_2_11 = 0.f; float p_2_12 = 0.f; float p_2_13 = 0.f; float p_2_14 = 0.f; float p_2_15 = 0.f; float p_2_16 = 0.f; float p_2_17 = 0.f; float p_2_18 = 0.f; float p_2_19 = 0.f; float p_2_20 = 0.f; float p_2_21 = 0.f; float p_2_22 = 0.f; float p_2_23 = 0.f; float p_2_24 = 0.f; float p_2_25 = 0.f; float p_2_26 = 0.f; float p_2_27 = 0.f; float p_2_28 = 0.f; float p_2_29 = 0.f; float p_2_30 = 0.f; float p_2_31 = 0.f; float p_3_0 = 0.f; float p_3_1 = 0.f; float p_3_2 = 0.f; float p_3_3 = 0.f; float p_3_4 = 0.f; float p_3_5 = 0.f; float p_3_6 = 0.f; float p_3_7 = 0.f; float p_3_8 = 0.f; float p_3_9 = 0.f; float p_3_10 = 0.f; float p_3_11 = 0.f; float p_3_12 = 0.f; float p_3_13 = 0.f; float p_3_14 = 0.f; float p_3_15 = 0.f; float p_3_16 = 0.f; float p_3_17 = 0.f; float p_3_18 = 0.f; float p_3_19 = 0.f; float p_3_20 = 0.f; float p_3_21 = 0.f; float p_3_22 = 0.f; float p_3_23 = 0.f; float p_3_24 = 0.f; float p_3_25 = 0.f; float p_3_26 = 0.f; float p_3_27 = 0.f; float p_3_28 = 0.f; float p_3_29 = 0.f; float p_3_30 = 0.f; float p_3_31 = 0.f; 
#define LOAD_SHARED(__PLANE__) { int idx_fixed = idx + snxy * idy; if ( 0 == (__PLANE__)) {  p_0_0 = smem[idx_fixed + snx * 0]; p_0_1 = smem[idx_fixed + snx * 1]; p_0_2 = smem[idx_fixed + snx * 2]; p_0_3 = smem[idx_fixed + snx * 3]; p_0_4 = smem[idx_fixed + snx * 4]; p_0_5 = smem[idx_fixed + snx * 5]; p_0_6 = smem[idx_fixed + snx * 6]; p_0_7 = smem[idx_fixed + snx * 7]; p_0_8 = smem[idx_fixed + snx * 8]; p_0_9 = smem[idx_fixed + snx * 9]; p_0_10 = smem[idx_fixed + snx * 10]; p_0_11 = smem[idx_fixed + snx * 11]; p_0_12 = smem[idx_fixed + snx * 12]; p_0_13 = smem[idx_fixed + snx * 13]; p_0_14 = smem[idx_fixed + snx * 14]; p_0_15 = smem[idx_fixed + snx * 15]; p_0_16 = smem[idx_fixed + snx * 16]; p_0_17 = smem[idx_fixed + snx * 17]; p_0_18 = smem[idx_fixed + snx * 18]; p_0_19 = smem[idx_fixed + snx * 19]; p_0_20 = smem[idx_fixed + snx * 20]; p_0_21 = smem[idx_fixed + snx * 21]; p_0_22 = smem[idx_fixed + snx * 22]; p_0_23 = smem[idx_fixed + snx * 23]; p_0_24 = smem[idx_fixed + snx * 24]; p_0_25 = smem[idx_fixed + snx * 25]; p_0_26 = smem[idx_fixed + snx * 26]; p_0_27 = smem[idx_fixed + snx * 27]; p_0_28 = smem[idx_fixed + snx * 28]; p_0_29 = smem[idx_fixed + snx * 29]; p_0_30 = smem[idx_fixed + snx * 30]; p_0_31 = smem[idx_fixed + snx * 31]; } if ( 1 == (__PLANE__)) {  p_1_0 = smem[idx_fixed + snx * 0]; p_1_1 = smem[idx_fixed + snx * 1]; p_1_2 = smem[idx_fixed + snx * 2]; p_1_3 = smem[idx_fixed + snx * 3]; p_1_4 = smem[idx_fixed + snx * 4]; p_1_5 = smem[idx_fixed + snx * 5]; p_1_6 = smem[idx_fixed + snx * 6]; p_1_7 = smem[idx_fixed + snx * 7]; p_1_8 = smem[idx_fixed + snx * 8]; p_1_9 = smem[idx_fixed + snx * 9]; p_1_10 = smem[idx_fixed + snx * 10]; p_1_11 = smem[idx_fixed + snx * 11]; p_1_12 = smem[idx_fixed + snx * 12]; p_1_13 = smem[idx_fixed + snx * 13]; p_1_14 = smem[idx_fixed + snx * 14]; p_1_15 = smem[idx_fixed + snx * 15]; p_1_16 = smem[idx_fixed + snx * 16]; p_1_17 = smem[idx_fixed + snx * 17]; p_1_18 = smem[idx_fixed + snx * 18]; p_1_19 = smem[idx_fixed + snx * 19]; p_1_20 = smem[idx_fixed + snx * 20]; p_1_21 = smem[idx_fixed + snx * 21]; p_1_22 = smem[idx_fixed + snx * 22]; p_1_23 = smem[idx_fixed + snx * 23]; p_1_24 = smem[idx_fixed + snx * 24]; p_1_25 = smem[idx_fixed + snx * 25]; p_1_26 = smem[idx_fixed + snx * 26]; p_1_27 = smem[idx_fixed + snx * 27]; p_1_28 = smem[idx_fixed + snx * 28]; p_1_29 = smem[idx_fixed + snx * 29]; p_1_30 = smem[idx_fixed + snx * 30]; p_1_31 = smem[idx_fixed + snx * 31]; } if ( 2 == (__PLANE__)) {  p_2_0 = smem[idx_fixed + snx * 0]; p_2_1 = smem[idx_fixed + snx * 1]; p_2_2 = smem[idx_fixed + snx * 2]; p_2_3 = smem[idx_fixed + snx * 3]; p_2_4 = smem[idx_fixed + snx * 4]; p_2_5 = smem[idx_fixed + snx * 5]; p_2_6 = smem[idx_fixed + snx * 6]; p_2_7 = smem[idx_fixed + snx * 7]; p_2_8 = smem[idx_fixed + snx * 8]; p_2_9 = smem[idx_fixed + snx * 9]; p_2_10 = smem[idx_fixed + snx * 10]; p_2_11 = smem[idx_fixed + snx * 11]; p_2_12 = smem[idx_fixed + snx * 12]; p_2_13 = smem[idx_fixed + snx * 13]; p_2_14 = smem[idx_fixed + snx * 14]; p_2_15 = smem[idx_fixed + snx * 15]; p_2_16 = smem[idx_fixed + snx * 16]; p_2_17 = smem[idx_fixed + snx * 17]; p_2_18 = smem[idx_fixed + snx * 18]; p_2_19 = smem[idx_fixed + snx * 19]; p_2_20 = smem[idx_fixed + snx * 20]; p_2_21 = smem[idx_fixed + snx * 21]; p_2_22 = smem[idx_fixed + snx * 22]; p_2_23 = smem[idx_fixed + snx * 23]; p_2_24 = smem[idx_fixed + snx * 24]; p_2_25 = smem[idx_fixed + snx * 25]; p_2_26 = smem[idx_fixed + snx * 26]; p_2_27 = smem[idx_fixed + snx * 27]; p_2_28 = smem[idx_fixed + snx * 28]; p_2_29 = smem[idx_fixed + snx * 29]; p_2_30 = smem[idx_fixed + snx * 30]; p_2_31 = smem[idx_fixed + snx * 31]; } if ( 3 == (__PLANE__)) {  p_3_0 = smem[idx_fixed + snx * 0]; p_3_1 = smem[idx_fixed + snx * 1]; p_3_2 = smem[idx_fixed + snx * 2]; p_3_3 = smem[idx_fixed + snx * 3]; p_3_4 = smem[idx_fixed + snx * 4]; p_3_5 = smem[idx_fixed + snx * 5]; p_3_6 = smem[idx_fixed + snx * 6]; p_3_7 = smem[idx_fixed + snx * 7]; p_3_8 = smem[idx_fixed + snx * 8]; p_3_9 = smem[idx_fixed + snx * 9]; p_3_10 = smem[idx_fixed + snx * 10]; p_3_11 = smem[idx_fixed + snx * 11]; p_3_12 = smem[idx_fixed + snx * 12]; p_3_13 = smem[idx_fixed + snx * 13]; p_3_14 = smem[idx_fixed + snx * 14]; p_3_15 = smem[idx_fixed + snx * 15]; p_3_16 = smem[idx_fixed + snx * 16]; p_3_17 = smem[idx_fixed + snx * 17]; p_3_18 = smem[idx_fixed + snx * 18]; p_3_19 = smem[idx_fixed + snx * 19]; p_3_20 = smem[idx_fixed + snx * 20]; p_3_21 = smem[idx_fixed + snx * 21]; p_3_22 = smem[idx_fixed + snx * 22]; p_3_23 = smem[idx_fixed + snx * 23]; p_3_24 = smem[idx_fixed + snx * 24]; p_3_25 = smem[idx_fixed + snx * 25]; p_3_26 = smem[idx_fixed + snx * 26]; p_3_27 = smem[idx_fixed + snx * 27]; p_3_28 = smem[idx_fixed + snx * 28]; p_3_29 = smem[idx_fixed + snx * 29]; p_3_30 = smem[idx_fixed + snx * 30]; p_3_31 = smem[idx_fixed + snx * 31]; } }
#define STORE_SHARED(__BATCH_Y__) { int idx_fixed = idx + snx * idy; int sptr; if ( 0 == (__BATCH_Y__)) {  sptr = idx_fixed + snx * 8 * 0 + snxy * 0; smem[sptr] = p_0_0; sptr = idx_fixed + snx * 8 * 1 + snxy * 0; smem[sptr] = p_1_0; sptr = idx_fixed + snx * 8 * 2 + snxy * 0; smem[sptr] = p_2_0; sptr = idx_fixed + snx * 8 * 3 + snxy * 0; smem[sptr] = p_3_0; sptr = idx_fixed + snx * 8 * 0 + snxy * 1; smem[sptr] = p_0_1; sptr = idx_fixed + snx * 8 * 1 + snxy * 1; smem[sptr] = p_1_1; sptr = idx_fixed + snx * 8 * 2 + snxy * 1; smem[sptr] = p_2_1; sptr = idx_fixed + snx * 8 * 3 + snxy * 1; smem[sptr] = p_3_1; sptr = idx_fixed + snx * 8 * 0 + snxy * 2; smem[sptr] = p_0_2; sptr = idx_fixed + snx * 8 * 1 + snxy * 2; smem[sptr] = p_1_2; sptr = idx_fixed + snx * 8 * 2 + snxy * 2; smem[sptr] = p_2_2; sptr = idx_fixed + snx * 8 * 3 + snxy * 2; smem[sptr] = p_3_2; sptr = idx_fixed + snx * 8 * 0 + snxy * 3; smem[sptr] = p_0_3; sptr = idx_fixed + snx * 8 * 1 + snxy * 3; smem[sptr] = p_1_3; sptr = idx_fixed + snx * 8 * 2 + snxy * 3; smem[sptr] = p_2_3; sptr = idx_fixed + snx * 8 * 3 + snxy * 3; smem[sptr] = p_3_3; sptr = idx_fixed + snx * 8 * 0 + snxy * 4; smem[sptr] = p_0_4; sptr = idx_fixed + snx * 8 * 1 + snxy * 4; smem[sptr] = p_1_4; sptr = idx_fixed + snx * 8 * 2 + snxy * 4; smem[sptr] = p_2_4; sptr = idx_fixed + snx * 8 * 3 + snxy * 4; smem[sptr] = p_3_4; sptr = idx_fixed + snx * 8 * 0 + snxy * 5; smem[sptr] = p_0_5; sptr = idx_fixed + snx * 8 * 1 + snxy * 5; smem[sptr] = p_1_5; sptr = idx_fixed + snx * 8 * 2 + snxy * 5; smem[sptr] = p_2_5; sptr = idx_fixed + snx * 8 * 3 + snxy * 5; smem[sptr] = p_3_5; sptr = idx_fixed + snx * 8 * 0 + snxy * 6; smem[sptr] = p_0_6; sptr = idx_fixed + snx * 8 * 1 + snxy * 6; smem[sptr] = p_1_6; sptr = idx_fixed + snx * 8 * 2 + snxy * 6; smem[sptr] = p_2_6; sptr = idx_fixed + snx * 8 * 3 + snxy * 6; smem[sptr] = p_3_6; sptr = idx_fixed + snx * 8 * 0 + snxy * 7; smem[sptr] = p_0_7; sptr = idx_fixed + snx * 8 * 1 + snxy * 7; smem[sptr] = p_1_7; sptr = idx_fixed + snx * 8 * 2 + snxy * 7; smem[sptr] = p_2_7; sptr = idx_fixed + snx * 8 * 3 + snxy * 7; smem[sptr] = p_3_7; } if ( 1 == (__BATCH_Y__)) {  sptr = idx_fixed + snx * 8 * 0 + snxy * 0; smem[sptr] = p_0_8; sptr = idx_fixed + snx * 8 * 1 + snxy * 0; smem[sptr] = p_1_8; sptr = idx_fixed + snx * 8 * 2 + snxy * 0; smem[sptr] = p_2_8; sptr = idx_fixed + snx * 8 * 3 + snxy * 0; smem[sptr] = p_3_8; sptr = idx_fixed + snx * 8 * 0 + snxy * 1; smem[sptr] = p_0_9; sptr = idx_fixed + snx * 8 * 1 + snxy * 1; smem[sptr] = p_1_9; sptr = idx_fixed + snx * 8 * 2 + snxy * 1; smem[sptr] = p_2_9; sptr = idx_fixed + snx * 8 * 3 + snxy * 1; smem[sptr] = p_3_9; sptr = idx_fixed + snx * 8 * 0 + snxy * 2; smem[sptr] = p_0_10; sptr = idx_fixed + snx * 8 * 1 + snxy * 2; smem[sptr] = p_1_10; sptr = idx_fixed + snx * 8 * 2 + snxy * 2; smem[sptr] = p_2_10; sptr = idx_fixed + snx * 8 * 3 + snxy * 2; smem[sptr] = p_3_10; sptr = idx_fixed + snx * 8 * 0 + snxy * 3; smem[sptr] = p_0_11; sptr = idx_fixed + snx * 8 * 1 + snxy * 3; smem[sptr] = p_1_11; sptr = idx_fixed + snx * 8 * 2 + snxy * 3; smem[sptr] = p_2_11; sptr = idx_fixed + snx * 8 * 3 + snxy * 3; smem[sptr] = p_3_11; sptr = idx_fixed + snx * 8 * 0 + snxy * 4; smem[sptr] = p_0_12; sptr = idx_fixed + snx * 8 * 1 + snxy * 4; smem[sptr] = p_1_12; sptr = idx_fixed + snx * 8 * 2 + snxy * 4; smem[sptr] = p_2_12; sptr = idx_fixed + snx * 8 * 3 + snxy * 4; smem[sptr] = p_3_12; sptr = idx_fixed + snx * 8 * 0 + snxy * 5; smem[sptr] = p_0_13; sptr = idx_fixed + snx * 8 * 1 + snxy * 5; smem[sptr] = p_1_13; sptr = idx_fixed + snx * 8 * 2 + snxy * 5; smem[sptr] = p_2_13; sptr = idx_fixed + snx * 8 * 3 + snxy * 5; smem[sptr] = p_3_13; sptr = idx_fixed + snx * 8 * 0 + snxy * 6; smem[sptr] = p_0_14; sptr = idx_fixed + snx * 8 * 1 + snxy * 6; smem[sptr] = p_1_14; sptr = idx_fixed + snx * 8 * 2 + snxy * 6; smem[sptr] = p_2_14; sptr = idx_fixed + snx * 8 * 3 + snxy * 6; smem[sptr] = p_3_14; sptr = idx_fixed + snx * 8 * 0 + snxy * 7; smem[sptr] = p_0_15; sptr = idx_fixed + snx * 8 * 1 + snxy * 7; smem[sptr] = p_1_15; sptr = idx_fixed + snx * 8 * 2 + snxy * 7; smem[sptr] = p_2_15; sptr = idx_fixed + snx * 8 * 3 + snxy * 7; smem[sptr] = p_3_15; } if ( 2 == (__BATCH_Y__)) {  sptr = idx_fixed + snx * 8 * 0 + snxy * 0; smem[sptr] = p_0_16; sptr = idx_fixed + snx * 8 * 1 + snxy * 0; smem[sptr] = p_1_16; sptr = idx_fixed + snx * 8 * 2 + snxy * 0; smem[sptr] = p_2_16; sptr = idx_fixed + snx * 8 * 3 + snxy * 0; smem[sptr] = p_3_16; sptr = idx_fixed + snx * 8 * 0 + snxy * 1; smem[sptr] = p_0_17; sptr = idx_fixed + snx * 8 * 1 + snxy * 1; smem[sptr] = p_1_17; sptr = idx_fixed + snx * 8 * 2 + snxy * 1; smem[sptr] = p_2_17; sptr = idx_fixed + snx * 8 * 3 + snxy * 1; smem[sptr] = p_3_17; sptr = idx_fixed + snx * 8 * 0 + snxy * 2; smem[sptr] = p_0_18; sptr = idx_fixed + snx * 8 * 1 + snxy * 2; smem[sptr] = p_1_18; sptr = idx_fixed + snx * 8 * 2 + snxy * 2; smem[sptr] = p_2_18; sptr = idx_fixed + snx * 8 * 3 + snxy * 2; smem[sptr] = p_3_18; sptr = idx_fixed + snx * 8 * 0 + snxy * 3; smem[sptr] = p_0_19; sptr = idx_fixed + snx * 8 * 1 + snxy * 3; smem[sptr] = p_1_19; sptr = idx_fixed + snx * 8 * 2 + snxy * 3; smem[sptr] = p_2_19; sptr = idx_fixed + snx * 8 * 3 + snxy * 3; smem[sptr] = p_3_19; sptr = idx_fixed + snx * 8 * 0 + snxy * 4; smem[sptr] = p_0_20; sptr = idx_fixed + snx * 8 * 1 + snxy * 4; smem[sptr] = p_1_20; sptr = idx_fixed + snx * 8 * 2 + snxy * 4; smem[sptr] = p_2_20; sptr = idx_fixed + snx * 8 * 3 + snxy * 4; smem[sptr] = p_3_20; sptr = idx_fixed + snx * 8 * 0 + snxy * 5; smem[sptr] = p_0_21; sptr = idx_fixed + snx * 8 * 1 + snxy * 5; smem[sptr] = p_1_21; sptr = idx_fixed + snx * 8 * 2 + snxy * 5; smem[sptr] = p_2_21; sptr = idx_fixed + snx * 8 * 3 + snxy * 5; smem[sptr] = p_3_21; sptr = idx_fixed + snx * 8 * 0 + snxy * 6; smem[sptr] = p_0_22; sptr = idx_fixed + snx * 8 * 1 + snxy * 6; smem[sptr] = p_1_22; sptr = idx_fixed + snx * 8 * 2 + snxy * 6; smem[sptr] = p_2_22; sptr = idx_fixed + snx * 8 * 3 + snxy * 6; smem[sptr] = p_3_22; sptr = idx_fixed + snx * 8 * 0 + snxy * 7; smem[sptr] = p_0_23; sptr = idx_fixed + snx * 8 * 1 + snxy * 7; smem[sptr] = p_1_23; sptr = idx_fixed + snx * 8 * 2 + snxy * 7; smem[sptr] = p_2_23; sptr = idx_fixed + snx * 8 * 3 + snxy * 7; smem[sptr] = p_3_23; } if ( 3 == (__BATCH_Y__)) {  sptr = idx_fixed + snx * 8 * 0 + snxy * 0; smem[sptr] = p_0_24; sptr = idx_fixed + snx * 8 * 1 + snxy * 0; smem[sptr] = p_1_24; sptr = idx_fixed + snx * 8 * 2 + snxy * 0; smem[sptr] = p_2_24; sptr = idx_fixed + snx * 8 * 3 + snxy * 0; smem[sptr] = p_3_24; sptr = idx_fixed + snx * 8 * 0 + snxy * 1; smem[sptr] = p_0_25; sptr = idx_fixed + snx * 8 * 1 + snxy * 1; smem[sptr] = p_1_25; sptr = idx_fixed + snx * 8 * 2 + snxy * 1; smem[sptr] = p_2_25; sptr = idx_fixed + snx * 8 * 3 + snxy * 1; smem[sptr] = p_3_25; sptr = idx_fixed + snx * 8 * 0 + snxy * 2; smem[sptr] = p_0_26; sptr = idx_fixed + snx * 8 * 1 + snxy * 2; smem[sptr] = p_1_26; sptr = idx_fixed + snx * 8 * 2 + snxy * 2; smem[sptr] = p_2_26; sptr = idx_fixed + snx * 8 * 3 + snxy * 2; smem[sptr] = p_3_26; sptr = idx_fixed + snx * 8 * 0 + snxy * 3; smem[sptr] = p_0_27; sptr = idx_fixed + snx * 8 * 1 + snxy * 3; smem[sptr] = p_1_27; sptr = idx_fixed + snx * 8 * 2 + snxy * 3; smem[sptr] = p_2_27; sptr = idx_fixed + snx * 8 * 3 + snxy * 3; smem[sptr] = p_3_27; sptr = idx_fixed + snx * 8 * 0 + snxy * 4; smem[sptr] = p_0_28; sptr = idx_fixed + snx * 8 * 1 + snxy * 4; smem[sptr] = p_1_28; sptr = idx_fixed + snx * 8 * 2 + snxy * 4; smem[sptr] = p_2_28; sptr = idx_fixed + snx * 8 * 3 + snxy * 4; smem[sptr] = p_3_28; sptr = idx_fixed + snx * 8 * 0 + snxy * 5; smem[sptr] = p_0_29; sptr = idx_fixed + snx * 8 * 1 + snxy * 5; smem[sptr] = p_1_29; sptr = idx_fixed + snx * 8 * 2 + snxy * 5; smem[sptr] = p_2_29; sptr = idx_fixed + snx * 8 * 3 + snxy * 5; smem[sptr] = p_3_29; sptr = idx_fixed + snx * 8 * 0 + snxy * 6; smem[sptr] = p_0_30; sptr = idx_fixed + snx * 8 * 1 + snxy * 6; smem[sptr] = p_1_30; sptr = idx_fixed + snx * 8 * 2 + snxy * 6; smem[sptr] = p_2_30; sptr = idx_fixed + snx * 8 * 3 + snxy * 6; smem[sptr] = p_3_30; sptr = idx_fixed + snx * 8 * 0 + snxy * 7; smem[sptr] = p_0_31; sptr = idx_fixed + snx * 8 * 1 + snxy * 7; smem[sptr] = p_1_31; sptr = idx_fixed + snx * 8 * 2 + snxy * 7; smem[sptr] = p_2_31; sptr = idx_fixed + snx * 8 * 3 + snxy * 7; smem[sptr] = p_3_31; } }
